/// <reference types="react" />
import { NavigationItemFormSchema } from './form';
import { FormChangeEvent, FormItemErrorSchema } from '../../../../../types';
export declare const useSlug: () => import("@tanstack/react-query").UseMutationResult<string, Error, string, unknown>;
export declare const usePayload: () => {
    encodePayload: (values: NavigationItemFormSchema) => NavigationItemFormSchema;
    decodePayload: (values: NavigationItemFormSchema) => NavigationItemFormSchema;
};
export declare const useFormValues: () => {
    formValue: {
        title: string;
        uiRouterKey: string;
        externalPath: string;
        type: "EXTERNAL";
        additionalFields: {
            [x: string]: any;
        };
        path?: string | null | undefined;
        menuAttached?: boolean | undefined;
        audience?: string[] | undefined;
        relatedType?: string | undefined;
        related?: string | undefined;
        autoSync?: boolean | undefined;
        id?: number | undefined;
        removed?: boolean | undefined;
        order?: number | undefined;
        documentId?: string | undefined;
        items?: any[] | undefined;
        collapsed?: boolean | undefined;
        viewId?: number | undefined;
        viewParentId?: number | undefined;
        structureId?: string | undefined;
        isSearchActive?: boolean | undefined;
        updated?: boolean | undefined;
        levelPath?: string | undefined;
        isMenuAllowedLevel?: boolean | undefined;
        parentAttachedToMenu?: boolean | undefined;
    } | {
        title: string;
        uiRouterKey: string;
        type: "INTERNAL";
        relatedType: string;
        additionalFields: {
            [x: string]: any;
        };
        path?: string | null | undefined;
        externalPath?: string | null | undefined;
        menuAttached?: boolean | undefined;
        audience?: string[] | undefined;
        related?: string | undefined;
        autoSync?: boolean | undefined;
        id?: number | undefined;
        removed?: boolean | undefined;
        order?: number | undefined;
        documentId?: string | undefined;
        items?: any[] | undefined;
        collapsed?: boolean | undefined;
        viewId?: number | undefined;
        viewParentId?: number | undefined;
        structureId?: string | undefined;
        isSearchActive?: boolean | undefined;
        updated?: boolean | undefined;
        levelPath?: string | undefined;
        isMenuAllowedLevel?: boolean | undefined;
        parentAttachedToMenu?: boolean | undefined;
    } | {
        title: string;
        uiRouterKey: string;
        type: "WRAPPER";
        additionalFields: {
            [x: string]: any;
        };
        path?: string | null | undefined;
        menuAttached?: boolean | undefined;
        audience?: string[] | undefined;
        autoSync?: boolean | undefined;
        id?: number | undefined;
        removed?: boolean | undefined;
        order?: number | undefined;
        documentId?: string | undefined;
        items?: any[] | undefined;
        collapsed?: boolean | undefined;
        viewId?: number | undefined;
        viewParentId?: number | undefined;
        structureId?: string | undefined;
        isSearchActive?: boolean | undefined;
        updated?: boolean | undefined;
        levelPath?: string | undefined;
        isMenuAllowedLevel?: boolean | undefined;
        parentAttachedToMenu?: boolean | undefined;
    };
    renderError: (field: string, messageKey?: string) => string | undefined;
    setFormError: import("react").Dispatch<import("react").SetStateAction<FormItemErrorSchema<{
        title: string;
        uiRouterKey: string;
        externalPath: string;
        type: "EXTERNAL";
        additionalFields: {
            [x: string]: any;
        };
        path?: string | null | undefined;
        menuAttached?: boolean | undefined;
        audience?: string[] | undefined;
        relatedType?: string | undefined;
        related?: string | undefined;
        autoSync?: boolean | undefined;
        id?: number | undefined;
        removed?: boolean | undefined;
        order?: number | undefined;
        documentId?: string | undefined;
        items?: any[] | undefined;
        collapsed?: boolean | undefined;
        viewId?: number | undefined;
        viewParentId?: number | undefined;
        structureId?: string | undefined;
        isSearchActive?: boolean | undefined;
        updated?: boolean | undefined;
        levelPath?: string | undefined;
        isMenuAllowedLevel?: boolean | undefined;
        parentAttachedToMenu?: boolean | undefined;
    } | {
        title: string;
        uiRouterKey: string;
        type: "INTERNAL";
        relatedType: string;
        additionalFields: {
            [x: string]: any;
        };
        path?: string | null | undefined;
        externalPath?: string | null | undefined;
        menuAttached?: boolean | undefined;
        audience?: string[] | undefined;
        related?: string | undefined;
        autoSync?: boolean | undefined;
        id?: number | undefined;
        removed?: boolean | undefined;
        order?: number | undefined;
        documentId?: string | undefined;
        items?: any[] | undefined;
        collapsed?: boolean | undefined;
        viewId?: number | undefined;
        viewParentId?: number | undefined;
        structureId?: string | undefined;
        isSearchActive?: boolean | undefined;
        updated?: boolean | undefined;
        levelPath?: string | undefined;
        isMenuAllowedLevel?: boolean | undefined;
        parentAttachedToMenu?: boolean | undefined;
    } | {
        title: string;
        uiRouterKey: string;
        type: "WRAPPER";
        additionalFields: {
            [x: string]: any;
        };
        path?: string | null | undefined;
        menuAttached?: boolean | undefined;
        audience?: string[] | undefined;
        autoSync?: boolean | undefined;
        id?: number | undefined;
        removed?: boolean | undefined;
        order?: number | undefined;
        documentId?: string | undefined;
        items?: any[] | undefined;
        collapsed?: boolean | undefined;
        viewId?: number | undefined;
        viewParentId?: number | undefined;
        structureId?: string | undefined;
        isSearchActive?: boolean | undefined;
        updated?: boolean | undefined;
        levelPath?: string | undefined;
        isMenuAllowedLevel?: boolean | undefined;
        parentAttachedToMenu?: boolean | undefined;
    }> | undefined>>;
    handleChange: (eventOrPath: FormChangeEvent, value?: any, nativeOnChange?: (eventOrPath: FormChangeEvent, value?: any) => void) => void;
    setFormValue: import("react").Dispatch<import("react").SetStateAction<{
        title: string;
        uiRouterKey: string;
        externalPath: string;
        type: "EXTERNAL";
        additionalFields: {
            [x: string]: any;
        };
        path?: string | null | undefined;
        menuAttached?: boolean | undefined;
        audience?: string[] | undefined;
        relatedType?: string | undefined;
        related?: string | undefined;
        autoSync?: boolean | undefined;
        id?: number | undefined;
        removed?: boolean | undefined;
        order?: number | undefined;
        documentId?: string | undefined;
        items?: any[] | undefined;
        collapsed?: boolean | undefined;
        viewId?: number | undefined;
        viewParentId?: number | undefined;
        structureId?: string | undefined;
        isSearchActive?: boolean | undefined;
        updated?: boolean | undefined;
        levelPath?: string | undefined;
        isMenuAllowedLevel?: boolean | undefined;
        parentAttachedToMenu?: boolean | undefined;
    } | {
        title: string;
        uiRouterKey: string;
        type: "INTERNAL";
        relatedType: string;
        additionalFields: {
            [x: string]: any;
        };
        path?: string | null | undefined;
        externalPath?: string | null | undefined;
        menuAttached?: boolean | undefined;
        audience?: string[] | undefined;
        related?: string | undefined;
        autoSync?: boolean | undefined;
        id?: number | undefined;
        removed?: boolean | undefined;
        order?: number | undefined;
        documentId?: string | undefined;
        items?: any[] | undefined;
        collapsed?: boolean | undefined;
        viewId?: number | undefined;
        viewParentId?: number | undefined;
        structureId?: string | undefined;
        isSearchActive?: boolean | undefined;
        updated?: boolean | undefined;
        levelPath?: string | undefined;
        isMenuAllowedLevel?: boolean | undefined;
        parentAttachedToMenu?: boolean | undefined;
    } | {
        title: string;
        uiRouterKey: string;
        type: "WRAPPER";
        additionalFields: {
            [x: string]: any;
        };
        path?: string | null | undefined;
        menuAttached?: boolean | undefined;
        audience?: string[] | undefined;
        autoSync?: boolean | undefined;
        id?: number | undefined;
        removed?: boolean | undefined;
        order?: number | undefined;
        documentId?: string | undefined;
        items?: any[] | undefined;
        collapsed?: boolean | undefined;
        viewId?: number | undefined;
        viewParentId?: number | undefined;
        structureId?: string | undefined;
        isSearchActive?: boolean | undefined;
        updated?: boolean | undefined;
        levelPath?: string | undefined;
        isMenuAllowedLevel?: boolean | undefined;
        parentAttachedToMenu?: boolean | undefined;
    }>>;
    setFormValueItem: (path: string, value: any) => void;
    setFormValuesItems: (values: any) => void;
};
